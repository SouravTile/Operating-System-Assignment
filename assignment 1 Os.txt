//Sourav_tile_090
//1]
echo "Please enter a number:"
read number
if (( $number % 2 == 0 ))
then
  echo "The number $number is even."
else
  echo "The number $number is odd."
fi

//2]
echo "Please enter a number:"
read number
factorial=1
for (( i=1; i<=number; i++ ))
do
  factorial=$((factorial * i))
done
echo "The factorial of $number is $factorial"


//4]
echo "Please enter a string:"
read str
rev_str=$(echo "$str" | rev)
if [ "$str" == "$rev_str" ]
then
  echo "The string is a palindrome."
else
  echo "The string is not a palindrome."
fi

//5]
echo "Please enter the number of terms:"
read n
a=0
b=1
echo "The Fibonacci sequence is:"
for (( i=0; i<n; i++ ))
do
  echo -n "$a "
  fn=$((a + b))
  a=$b
  b=$fn
done
echo

//3]
echo "Please enter three numbers:"
read num1
read num2
read num3
if (( num1 >= num2 && num1 >= num3 ))
then
  echo "The largest number is $num1."
elif (( number2 >= number1 && num2 >= num3 ))
then
  echo "The largest number is $num2."
else
  echo "The largest number is $num3."
fi

//6]
echo "Please enter a number:"
read number
is_prime=1
for (( i=2; i*i<=number; i++ ))
do
  if (( number % i == 0 ))
  then
    is_prime=0
    break
  fi
done
if (( is_prime == 1 && number > 1 ))
then
  echo "The number $number is prime."
else
  echo "The number $number is not prime."
fi

//7]
echo "Please enter a number:"
read number
echo "The multiplication table of $number is:"
for (( i=1; i<=10; i++ ))
do
  echo "$number * $i = $((number * i))"
done

//8]
echo "Please enter a number:"
read number
sum=0
for (( i=2; i<=number; i+=2 ))
do
  sum=$((sum + i))
done
echo "The sum of all even numbers between 1 and $number is $sum."

//9]
echo "Please enter a number:"
read number
sum=0
for (( i=1; i<=number; i++ ))
do
  sum=$((sum + i))
done
echo "The sum of all natural numbers from 1 to $number is $sum."

//10]
echo "Please enter a number:"
read number
rev_number=$(echo "$number" | rev)
echo "The reverse of $number is $rev_number."

//11]
echo "Please enter the directory:"
read directory
echo "Please enter the file name:"
read filename
if [ -e "$directory/$filename" ]
then
  echo "The file $filename exists in the directory $directory."
else
  echo "The file $filename does not exist in the directory $directory."
fi

//12]
echo "Please enter a number:"
read number
factorial=1
counter=1
while [ $counter -le $number ]
do
  factorial=$((factorial * counter))
  counter=$((counter + 1))
done
echo "The factorial of $number is $factorial."

//13]
echo "Please select an option:"
echo "1. Display the date"
echo "2. Display the uptime"
echo "3. Display the users logged in"
echo "4. Exit"

read selection
case $selection in
  //1]
    echo "The current date is:"
    date
    ;;
  //2]
    echo "The system uptime is:"
    uptime
    ;;
  //3]
    echo "The users currently logged in are:"
    who
    ;;
  //4]
    echo "Exiting the script."
    exit 0
    ;;
  *)
    echo "Invalid option selected."
    exit 1
    ;;
esac


//14]
echo "Please select an option:"
echo "1. Display the date"
echo "2. Display the uptime"
echo "3. Display the users logged in"
echo "4. Exit"

read selection
case $selection in
  //1]
    echo "The current date is:"
    date
    ;;
  //2]
    echo "The system uptime is:"
    uptime
    ;;
  //3]
    echo "The users currently logged in are:"
    who
    ;;
  //4]
    echo "Exiting the script."
    exit 0
    ;;
  *)
    echo "Invalid option selected."
    exit 1
    ;;
esac


15)
random_number=$(( RANDOM % 100 + 1 ))
guess=0
while (( guess != random_number ))
do
  echo "Please enter your guess (1-100):"
  read guess
  if (( guess < random_number ))
  then
    echo "Too low!"
  elif (( guess > random_number ))
  then
    echo "Too high!"
  else
    echo "Congratulations! You guessed the number."
  fi
done

16)
numbers=(1 2 3 4 5)
sum=0
for number in ${numbers[@]}
do
  sum=$((sum + number))
done
average=$(echo "$sum / ${#numbers[@]}" | bc -l)

echo "The sum of the numbers is $sum."
echo "The average of the numbers is $average."

17)
echo "Please enter the base:"
read base
echo "Please enter the exponent:"
read exponent
result=1
for (( i=0; i<exponent; i++ ))
do
  result=$((result * base))
done
echo "The result of $base raised to the power of $exponent is $result."

18)
echo "Please enter the base:"
read base
echo "Please enter the exponent:"
read exponent
result=1
for (( i=0; i<exponent; i++ ))
do
  result=$((result * base))
done

echo "The result of $base raised to the power of $exponent is $result."

19)
echo "Please enter a year:"
read year
if (( year % 4 == 0 && (year % 100 != 0 || year % 400 == 0) ))
then
  echo "The year $year is a leap year."
else
  echo "The year $year is not a leap year."
fi


20)
echo "Please enter the first number:"
read number1
echo "Please enter the second number:"
read number2
echo "Please enter an operation (+, -, *, /):"
read operation

case $operation in
  "+")
    result=$((number1 + number2))
    ;;
  "-")
    result=$((number1 - number2))
    ;;
  "*")
    result=$((number1 * number2))
    ;;
  "/")
    if (( number2 != 0 ))
    then
      result=$(echo "scale=2; $number1 / $number2" | bc)
    else
      echo "Error: Division by zero is not allowed."
      exit 1
    fi
    ;;
  *)
    echo "Error: Invalid operation."
    exit 1
    ;;
esac

echo "The result of $number1 $operation $number2 is $result."


21)

echo "Please enter the file name:"
read filename
if [ -w "$filename" ]
then
  echo "The file $filename is writable."
else
  echo "The file $filename is not writable."
fi

22)

numbers=(1 2 3 4 5)
largest=${numbers[0]}
second_largest='unset'

for (( i=1; i < ${#numbers[@]}; i++ ))
do
  if (( numbers[i] > largest ))
  then
    second_largest=$largest
    largest=${numbers[i]}
  elif (( numbers[i] != largest )) && { [[ "$second_largest" == "unset" ]] || (( numbers[i] > second_largest )); }
  then
    second_largest=${numbers[i]}
  fi
done
echo "The second largest number is $second_largest."


23)
echo "Please enter the file name:"
read filename

if [ -e "$filename" ]
then
  word_count=$(wc -w < "$filename")
  echo "The file $filename contains $word_count words."
else
  echo "The file $filename does not exist."
fi


24)
echo "Please enter the limit:"
read limit

echo "The prime numbers up to $limit are:"
for (( number=2; number<=limit; number++ ))
do
  is_prime=1
  for (( i=2; i*i<=number; i++ ))
  do
    if (( number % i == 0 ))
    then
      is_prime=0
      break
    fi
  done
  if (( is_prime == 1 ))
  then
    echo "$number"
  fi
done


25)
echo "Please enter the limit:"
echo "The prime numbers up to $limit are:"
for (( number=2; number<=limit; number++ ))
do
  is_prime=1
  for (( i=2; i*i<=number; i++ ))
  do
    if (( number % i == 0 ))
    then
      is_prime=0
      break
    fi
  done
  if (( is_prime == 1 ))
  then
    echo "$number"
  fi
done


26)

echo "Please enter a decimal number:"
read decimal_number
binary_number=$(echo "obase=2;$decimal_number" | bc)
echo "The binary representation of $decimal_number is $binary_number."


27)
echo "Please select a shape:"
echo "1. Circle"
echo "2. Triangle"
echo "3. Rectangle"

  1)
    echo "Please enter the radius of the circle:"
    read radius
    area=$(echo "3.14159 * $radius * $radius" | bc)
    echo "The area of the circle is $area."
    ;;
  2)
    echo "Please enter the base of the triangle:"
    read base
    echo "Please enter the height of the triangle:"
    read height
    area=$(echo "0.5 * $base * $height" | bc)
    echo "The area of the triangle is $area."
    ;;
  3)
    echo "Please enter the length of the rectangle:"
    read length
    echo "Please enter the width of the rectangle:"
    read width
    area=$(echo "$length * $width" | bc)
    echo "The area of the rectangle is $area."
    ;;
  *)
    echo "Invalid option selected."
    exit 1
    ;;
esac


28)
echo "Please enter the lower limit:"
read lower_limit
echo "Please enter the upper limit:"
read upper_limit

echo "The Armstrong numbers between $lower_limit and $upper_limit are:"
for (( number=lower_limit; number<=upper_limit; number++ ))
do
  sum=0
  temp=$number
  length=${#temp}
  
  while (( temp > 0 ))
  do
    digit=$((temp % 10))
    sum=$((sum + digit ** length))
    temp=$((temp / 10))
  done
  
  if (( sum == number ))
  then
    echo "$number"
  fi
done

29)
Implement a script to list files by their size in a directory.

30)
#!/bin/bash
echo "Enter the height of the inverted right triangle: "
read height
for ((i = height; i >= 1; i--))
do
    for ((j = 1; j <= i; j++))
    do
        echo -n "* "
    done
    echo
done
